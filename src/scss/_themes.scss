$themes: (
  light: (
    /* backgroundColor: #ccc,
    textColor: #408bbd,
    buttonTextColor: #408bbd,
    buttonTextTransform: none,
    buttonTextHoverColor: #61b0e7,
    buttonColor: #fff,
    buttonBorder: 2px solid #fff, */

    PrimaryColor: #2094f3,
    PrimaryLight: rgb(110, 196, 255),
    PrimaryDark: rgb(0, 103, 192),
    SecondryColor: #7cb342,
    SecondryLight: #ffd95b,
    SecondryDark: #c77800,
    PrimaryTextColor: rgb(51, 51, 51),
    navBGColor: rgb(248, 248, 248),
    colorBorder: rgb(230, 230, 230),
    navTextColor: rgb(58, 58, 58),
    navIconColor: rgb(143, 143, 143),      
    navIconBg: rgb(230, 230, 230),
    alertColor: rgb(247, 58, 58),
    formShadows: rgba(32, 148, 243, 0.2)
  ),
  dark: (
    /* backgroundColor: #222,
    textColor: #ddd,
    buttonTextColor: #aaa,
    buttonTextTransform: uppercase,
    buttonTextHoverColor: #ddd,
    buttonColor: #333,
    buttonBorder: 1px solid #aaa, */
  ),
);


@mixin themify($themes: $themes) {

    @each $theme,
    $map in $themes {
  
      .theme-#{$theme} & {
        $theme-map: () !global;
  
        @each $key,
        $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
  
        @content;
        $theme-map: null !global;
      }
  
    }
  }
  
  @function themed($key) {
    @return map-get($theme-map, $key);
  }